{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isCartOpen: false,\n  cart: []\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    toggleCart: state => {\n      state.isCartOpen = !state.isCartOpen;\n    },\n    addToCart: (state, action) => {\n      const existingItem = state.cart.find(item => item.title === action.payload.title);\n      if (existingItem) {\n        existingItem.quantity++;\n        existingItem.total = existingItem.quantity * existingItem.price;\n      } else {\n        state.cart.push({\n          ...action.payload,\n          quantity: 1,\n          total: action.payload.price\n        });\n      }\n    },\n    increaseQuantity: (state, action) => {\n      const existingItem = state.cart.find(item => item.title === action.payload.title);\n      if (existingItem) {\n        existingItem.quantity++;\n        existingItem.total = existingItem.quantity * existingItem.price;\n      }\n    },\n    decreaseQuantity: (state, action) => {\n      const existingItem = state.cart.find(item => item.title === action.payload.title);\n      if (existingItem) {\n        existingItem.quantity--;\n        existingItem.total = existingItem.quantity * existingItem.price;\n      }\n    },\n    removeFromCart: (state, action) => {\n      state.cart = state.cart.filter(item => item.id !== action.payload);\n    },\n    clearCart: state => {\n      state.cart = [];\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    cart: cartSlice.reducer\n  }\n});\nexport default store;\nexport const {\n  toggleCart,\n  addToCart,\n  removeFromCart,\n  clearCart,\n  decreaseQuantity,\n  increaseQuantity\n} = cartSlice.actions;","map":{"version":3,"names":["createSlice","configureStore","initialState","isCartOpen","cart","cartSlice","name","reducers","toggleCart","state","addToCart","action","existingItem","find","item","title","payload","quantity","total","price","push","increaseQuantity","decreaseQuantity","removeFromCart","filter","id","clearCart","store","reducer","actions"],"sources":["C:/Users/panla/OneDrive/Desktop/projects/ReactProjects-Panlam0405/redux/advanced redux/01-starting-project/src/components/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n\tisCartOpen: false,\r\n\tcart: [],\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n\tname: \"cart\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\ttoggleCart: (state) => {\r\n\t\t\tstate.isCartOpen = !state.isCartOpen;\r\n\t\t},\r\n\t\taddToCart: (state, action) => {\r\n\t\t\tconst existingItem = state.cart.find(\r\n\t\t\t\t(item) => item.title === action.payload.title\r\n\t\t\t);\r\n\t\t\tif (existingItem) {\r\n\t\t\t\texistingItem.quantity++;\r\n\t\t\t\texistingItem.total = existingItem.quantity * existingItem.price;\r\n\t\t\t} else {\r\n\t\t\t\tstate.cart.push({\r\n\t\t\t\t\t...action.payload,\r\n\t\t\t\t\tquantity: 1,\r\n\t\t\t\t\ttotal: action.payload.price,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tincreaseQuantity: (state, action) => {\r\n\t\t\tconst existingItem = state.cart.find(\r\n\t\t\t\t(item) => item.title === action.payload.title\r\n\t\t\t);\r\n\t\t\tif (existingItem) {\r\n\t\t\t\texistingItem.quantity++;\r\n\t\t\t\texistingItem.total = existingItem.quantity * existingItem.price;\r\n\t\t\t}\r\n\t\t},\r\n\t\tdecreaseQuantity: (state, action) => {\r\n\t\t\tconst existingItem = state.cart.find(\r\n\t\t\t\t(item) => item.title === action.payload.title\r\n\t\t\t);\r\n\t\t\tif (existingItem) {\r\n\t\t\t\texistingItem.quantity--;\r\n\t\t\t\texistingItem.total = existingItem.quantity * existingItem.price;\r\n\t\t\t}\r\n\t\t},\r\n\t\tremoveFromCart: (state, action) => {\r\n\t\t\tstate.cart = state.cart.filter((item) => item.id !== action.payload);\r\n\t\t},\r\n\t\tclearCart: (state) => {\r\n\t\t\tstate.cart = [];\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst store = configureStore({\r\n\treducer: {\r\n\t\tcart: cartSlice.reducer,\r\n\t},\r\n});\r\n\r\nexport default store;\r\nexport const {\r\n\ttoggleCart,\r\n\taddToCart,\r\n\tremoveFromCart,\r\n\tclearCart,\r\n\tdecreaseQuantity,\r\n\tincreaseQuantity,\r\n} = cartSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,YAAY,GAAG;EACpBC,UAAU,EAAE,KAAK;EACjBC,IAAI,EAAE;AACP,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACTC,UAAU,EAAGC,KAAK,IAAK;MACtBA,KAAK,CAACN,UAAU,GAAG,CAACM,KAAK,CAACN,UAAU;IACrC,CAAC;IACDO,SAAS,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7B,MAAMC,YAAY,GAAGH,KAAK,CAACL,IAAI,CAACS,IAAI,CAClCC,IAAI,IAAKA,IAAI,CAACC,KAAK,KAAKJ,MAAM,CAACK,OAAO,CAACD,KAAK,CAC7C;MACD,IAAIH,YAAY,EAAE;QACjBA,YAAY,CAACK,QAAQ,EAAE;QACvBL,YAAY,CAACM,KAAK,GAAGN,YAAY,CAACK,QAAQ,GAAGL,YAAY,CAACO,KAAK;MAChE,CAAC,MAAM;QACNV,KAAK,CAACL,IAAI,CAACgB,IAAI,CAAC;UACf,GAAGT,MAAM,CAACK,OAAO;UACjBC,QAAQ,EAAE,CAAC;UACXC,KAAK,EAAEP,MAAM,CAACK,OAAO,CAACG;QACvB,CAAC,CAAC;MACH;IACD,CAAC;IACDE,gBAAgB,EAAEA,CAACZ,KAAK,EAAEE,MAAM,KAAK;MACpC,MAAMC,YAAY,GAAGH,KAAK,CAACL,IAAI,CAACS,IAAI,CAClCC,IAAI,IAAKA,IAAI,CAACC,KAAK,KAAKJ,MAAM,CAACK,OAAO,CAACD,KAAK,CAC7C;MACD,IAAIH,YAAY,EAAE;QACjBA,YAAY,CAACK,QAAQ,EAAE;QACvBL,YAAY,CAACM,KAAK,GAAGN,YAAY,CAACK,QAAQ,GAAGL,YAAY,CAACO,KAAK;MAChE;IACD,CAAC;IACDG,gBAAgB,EAAEA,CAACb,KAAK,EAAEE,MAAM,KAAK;MACpC,MAAMC,YAAY,GAAGH,KAAK,CAACL,IAAI,CAACS,IAAI,CAClCC,IAAI,IAAKA,IAAI,CAACC,KAAK,KAAKJ,MAAM,CAACK,OAAO,CAACD,KAAK,CAC7C;MACD,IAAIH,YAAY,EAAE;QACjBA,YAAY,CAACK,QAAQ,EAAE;QACvBL,YAAY,CAACM,KAAK,GAAGN,YAAY,CAACK,QAAQ,GAAGL,YAAY,CAACO,KAAK;MAChE;IACD,CAAC;IACDI,cAAc,EAAEA,CAACd,KAAK,EAAEE,MAAM,KAAK;MAClCF,KAAK,CAACL,IAAI,GAAGK,KAAK,CAACL,IAAI,CAACoB,MAAM,CAAEV,IAAI,IAAKA,IAAI,CAACW,EAAE,KAAKd,MAAM,CAACK,OAAO,CAAC;IACrE,CAAC;IACDU,SAAS,EAAGjB,KAAK,IAAK;MACrBA,KAAK,CAACL,IAAI,GAAG,EAAE;IAChB;EACD;AACD,CAAC,CAAC;AAEF,MAAMuB,KAAK,GAAG1B,cAAc,CAAC;EAC5B2B,OAAO,EAAE;IACRxB,IAAI,EAAEC,SAAS,CAACuB;EACjB;AACD,CAAC,CAAC;AAEF,eAAeD,KAAK;AACpB,OAAO,MAAM;EACZnB,UAAU;EACVE,SAAS;EACTa,cAAc;EACdG,SAAS;EACTJ,gBAAgB;EAChBD;AACD,CAAC,GAAGhB,SAAS,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}